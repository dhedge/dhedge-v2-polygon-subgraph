// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DaoAddressSet extends ethereum.Event {
  get params(): DaoAddressSet__Params {
    return new DaoAddressSet__Params(this);
  }
}

export class DaoAddressSet__Params {
  _event: DaoAddressSet;

  constructor(event: DaoAddressSet) {
    this._event = event;
  }

  get dao(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DaoFeeSet extends ethereum.Event {
  get params(): DaoFeeSet__Params {
    return new DaoFeeSet__Params(this);
  }
}

export class DaoFeeSet__Params {
  _event: DaoFeeSet;

  constructor(event: DaoFeeSet) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExitCooldownSet extends ethereum.Event {
  get params(): ExitCooldownSet__Params {
    return new ExitCooldownSet__Params(this);
  }
}

export class ExitCooldownSet__Params {
  _event: ExitCooldownSet;

  constructor(event: ExitCooldownSet) {
    this._event = event;
  }

  get cooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeSet extends ethereum.Event {
  get params(): ExitFeeSet__Params {
    return new ExitFeeSet__Params(this);
  }
}

export class ExitFeeSet__Params {
  _event: ExitFeeSet;

  constructor(event: ExitFeeSet) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundCreated extends ethereum.Event {
  get params(): FundCreated__Params {
    return new FundCreated__Params(this);
  }
}

export class FundCreated__Params {
  _event: FundCreated;

  constructor(event: FundCreated) {
    this._event = event;
  }

  get fundAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPoolPrivate(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get fundName(): string {
    return this._event.parameters[2].value.toString();
  }

  get managerName(): string {
    return this._event.parameters[3].value.toString();
  }

  get manager(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get managerFeeNumerator(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get managerFeeDenominator(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class LogUpgrade extends ethereum.Event {
  get params(): LogUpgrade__Params {
    return new LogUpgrade__Params(this);
  }
}

export class LogUpgrade__Params {
  _event: LogUpgrade;

  constructor(event: LogUpgrade) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MaximumSupportedAssetCountSet extends ethereum.Event {
  get params(): MaximumSupportedAssetCountSet__Params {
    return new MaximumSupportedAssetCountSet__Params(this);
  }
}

export class MaximumSupportedAssetCountSet__Params {
  _event: MaximumSupportedAssetCountSet;

  constructor(event: MaximumSupportedAssetCountSet) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProxyCreated extends ethereum.Event {
  get params(): ProxyCreated__Params {
    return new ProxyCreated__Params(this);
  }
}

export class ProxyCreated__Params {
  _event: ProxyCreated;

  constructor(event: ProxyCreated) {
    this._event = event;
  }

  get proxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetAssetGuard extends ethereum.Event {
  get params(): SetAssetGuard__Params {
    return new SetAssetGuard__Params(this);
  }
}

export class SetAssetGuard__Params {
  _event: SetAssetGuard;

  constructor(event: SetAssetGuard) {
    this._event = event;
  }

  get assetType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get guardAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetAssetHandler extends ethereum.Event {
  get params(): SetAssetHandler__Params {
    return new SetAssetHandler__Params(this);
  }
}

export class SetAssetHandler__Params {
  _event: SetAssetHandler;

  constructor(event: SetAssetHandler) {
    this._event = event;
  }

  get assetHandler(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetContractGuard extends ethereum.Event {
  get params(): SetContractGuard__Params {
    return new SetContractGuard__Params(this);
  }
}

export class SetContractGuard__Params {
  _event: SetContractGuard;

  constructor(event: SetContractGuard) {
    this._event = event;
  }

  get extContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get guardAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetMaximumManagerFee extends ethereum.Event {
  get params(): SetMaximumManagerFee__Params {
    return new SetMaximumManagerFee__Params(this);
  }
}

export class SetMaximumManagerFee__Params {
  _event: SetMaximumManagerFee;

  constructor(event: SetMaximumManagerFee) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetMaximumManagerFeeNumeratorChange extends ethereum.Event {
  get params(): SetMaximumManagerFeeNumeratorChange__Params {
    return new SetMaximumManagerFeeNumeratorChange__Params(this);
  }
}

export class SetMaximumManagerFeeNumeratorChange__Params {
  _event: SetMaximumManagerFeeNumeratorChange;

  constructor(event: SetMaximumManagerFeeNumeratorChange) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetPoolManagerFee extends ethereum.Event {
  get params(): SetPoolManagerFee__Params {
    return new SetPoolManagerFee__Params(this);
  }
}

export class SetPoolManagerFee__Params {
  _event: SetPoolManagerFee;

  constructor(event: SetPoolManagerFee) {
    this._event = event;
  }

  get numerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetTrackingCode extends ethereum.Event {
  get params(): SetTrackingCode__Params {
    return new SetTrackingCode__Params(this);
  }
}

export class SetTrackingCode__Params {
  _event: SetTrackingCode;

  constructor(event: SetTrackingCode) {
    this._event = event;
  }

  get code(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolFactory__createFundInput_supportedAssetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get isDeposit(): boolean {
    return this[1].toBoolean();
  }
}

export class PoolFactory__getDaoFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class PoolFactory__getMaximumManagerFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class PoolFactory__getPoolManagerFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class PoolFactory extends ethereum.SmartContract {
  static bind(address: Address): PoolFactory {
    return new PoolFactory("PoolFactory", address);
  }

  createFund(
    _privatePool: boolean,
    _manager: Address,
    _managerName: string,
    _fundName: string,
    _fundSymbol: string,
    _managerFeeNumerator: BigInt,
    _supportedAssets: Array<PoolFactory__createFundInput_supportedAssetsStruct>
  ): Address {
    let result = super.call(
      "createFund",
      "createFund(bool,address,string,string,string,uint256,(address,bool)[]):(address)",
      [
        ethereum.Value.fromBoolean(_privatePool),
        ethereum.Value.fromAddress(_manager),
        ethereum.Value.fromString(_managerName),
        ethereum.Value.fromString(_fundName),
        ethereum.Value.fromString(_fundSymbol),
        ethereum.Value.fromUnsignedBigInt(_managerFeeNumerator),
        ethereum.Value.fromTupleArray(_supportedAssets)
      ]
    );

    return result[0].toAddress();
  }

  try_createFund(
    _privatePool: boolean,
    _manager: Address,
    _managerName: string,
    _fundName: string,
    _fundSymbol: string,
    _managerFeeNumerator: BigInt,
    _supportedAssets: Array<PoolFactory__createFundInput_supportedAssetsStruct>
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createFund",
      "createFund(bool,address,string,string,string,uint256,(address,bool)[]):(address)",
      [
        ethereum.Value.fromBoolean(_privatePool),
        ethereum.Value.fromAddress(_manager),
        ethereum.Value.fromString(_managerName),
        ethereum.Value.fromString(_fundName),
        ethereum.Value.fromString(_fundSymbol),
        ethereum.Value.fromUnsignedBigInt(_managerFeeNumerator),
        ethereum.Value.fromTupleArray(_supportedAssets)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deploy(_data: Bytes, _proxyType: i32): Address {
    let result = super.call("deploy", "deploy(bytes,uint8):(address)", [
      ethereum.Value.fromBytes(_data),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);

    return result[0].toAddress();
  }

  try_deploy(_data: Bytes, _proxyType: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("deploy", "deploy(bytes,uint8):(address)", [
      ethereum.Value.fromBytes(_data),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployedFunds(param0: BigInt): Address {
    let result = super.call(
      "deployedFunds",
      "deployedFunds(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedFunds(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedFunds",
      "deployedFunds(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetHandler(): Address {
    let result = super.call(
      "getAssetHandler",
      "getAssetHandler():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getAssetHandler(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAssetHandler",
      "getAssetHandler():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetPrice(asset: Address): BigInt {
    let result = super.call(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );

    return result[0].toBigInt();
  }

  try_getAssetPrice(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssetType(asset: Address): i32 {
    let result = super.call("getAssetType", "getAssetType(address):(uint8)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toI32();
  }

  try_getAssetType(asset: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getAssetType",
      "getAssetType(address):(uint8)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getDaoAddress(): Address {
    let result = super.call("getDaoAddress", "getDaoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getDaoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDaoAddress",
      "getDaoAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDaoFee(): PoolFactory__getDaoFeeResult {
    let result = super.call("getDaoFee", "getDaoFee():(uint256,uint256)", []);

    return new PoolFactory__getDaoFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getDaoFee(): ethereum.CallResult<PoolFactory__getDaoFeeResult> {
    let result = super.tryCall(
      "getDaoFee",
      "getDaoFee():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactory__getDaoFeeResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getDeployedFunds(): Array<Address> {
    let result = super.call(
      "getDeployedFunds",
      "getDeployedFunds():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getDeployedFunds(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedFunds",
      "getDeployedFunds():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getExitCooldown(): BigInt {
    let result = super.call(
      "getExitCooldown",
      "getExitCooldown():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getExitCooldown(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExitCooldown",
      "getExitCooldown():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGuard(extContract: Address): Address {
    let result = super.call("getGuard", "getGuard(address):(address)", [
      ethereum.Value.fromAddress(extContract)
    ]);

    return result[0].toAddress();
  }

  try_getGuard(extContract: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("getGuard", "getGuard(address):(address)", [
      ethereum.Value.fromAddress(extContract)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLogic(_proxyType: i32): Address {
    let result = super.call("getLogic", "getLogic(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);

    return result[0].toAddress();
  }

  try_getLogic(_proxyType: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("getLogic", "getLogic(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_proxyType))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getManagerFeeNumeratorChangeDelay(): BigInt {
    let result = super.call(
      "getManagerFeeNumeratorChangeDelay",
      "getManagerFeeNumeratorChangeDelay():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getManagerFeeNumeratorChangeDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getManagerFeeNumeratorChangeDelay",
      "getManagerFeeNumeratorChangeDelay():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaximumManagerFee(): PoolFactory__getMaximumManagerFeeResult {
    let result = super.call(
      "getMaximumManagerFee",
      "getMaximumManagerFee():(uint256,uint256)",
      []
    );

    return new PoolFactory__getMaximumManagerFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getMaximumManagerFee(): ethereum.CallResult<
    PoolFactory__getMaximumManagerFeeResult
  > {
    let result = super.tryCall(
      "getMaximumManagerFee",
      "getMaximumManagerFee():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactory__getMaximumManagerFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getMaximumManagerFeeNumeratorChange(): BigInt {
    let result = super.call(
      "getMaximumManagerFeeNumeratorChange",
      "getMaximumManagerFeeNumeratorChange():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMaximumManagerFeeNumeratorChange(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMaximumManagerFeeNumeratorChange",
      "getMaximumManagerFeeNumeratorChange():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaximumSupportedAssetCount(): BigInt {
    let result = super.call(
      "getMaximumSupportedAssetCount",
      "getMaximumSupportedAssetCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMaximumSupportedAssetCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMaximumSupportedAssetCount",
      "getMaximumSupportedAssetCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPoolManagerFee(pool: Address): PoolFactory__getPoolManagerFeeResult {
    let result = super.call(
      "getPoolManagerFee",
      "getPoolManagerFee(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(pool)]
    );

    return new PoolFactory__getPoolManagerFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPoolManagerFee(
    pool: Address
  ): ethereum.CallResult<PoolFactory__getPoolManagerFeeResult> {
    let result = super.tryCall(
      "getPoolManagerFee",
      "getPoolManagerFee(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(pool)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactory__getPoolManagerFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getTrackingCode(): Bytes {
    let result = super.call(
      "getTrackingCode",
      "getTrackingCode():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getTrackingCode(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getTrackingCode",
      "getTrackingCode():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPool(param0: Address): boolean {
    let result = super.call("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isPool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPoolManager(param0: Address): boolean {
    let result = super.call("isPoolManager", "isPoolManager(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isPoolManager(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPoolManager",
      "isPoolManager(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidAsset(asset: Address): boolean {
    let result = super.call("isValidAsset", "isValidAsset(address):(bool)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toBoolean();
  }

  try_isValidAsset(asset: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isValidAsset", "isValidAsset(address):(bool)", [
      ethereum.Value.fromAddress(asset)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  managerFeeNumeratorChangeDelay(): BigInt {
    let result = super.call(
      "managerFeeNumeratorChangeDelay",
      "managerFeeNumeratorChangeDelay():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_managerFeeNumeratorChangeDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "managerFeeNumeratorChangeDelay",
      "managerFeeNumeratorChangeDelay():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maximumManagerFeeNumeratorChange(): BigInt {
    let result = super.call(
      "maximumManagerFeeNumeratorChange",
      "maximumManagerFeeNumeratorChange():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maximumManagerFeeNumeratorChange(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maximumManagerFeeNumeratorChange",
      "maximumManagerFeeNumeratorChange():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolManagerFeeDenominator(param0: Address): BigInt {
    let result = super.call(
      "poolManagerFeeDenominator",
      "poolManagerFeeDenominator(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_poolManagerFeeDenominator(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolManagerFeeDenominator",
      "poolManagerFeeDenominator(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolManagerFeeNumerator(param0: Address): BigInt {
    let result = super.call(
      "poolManagerFeeNumerator",
      "poolManagerFeeNumerator(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_poolManagerFeeNumerator(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolManagerFeeNumerator",
      "poolManagerFeeNumerator(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolStorageVersion(): BigInt {
    let result = super.call(
      "poolStorageVersion",
      "poolStorageVersion():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_poolStorageVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolStorageVersion",
      "poolStorageVersion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolVersion(param0: Address): BigInt {
    let result = super.call("poolVersion", "poolVersion(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_poolVersion(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolVersion",
      "poolVersion(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateFundCall extends ethereum.Call {
  get inputs(): CreateFundCall__Inputs {
    return new CreateFundCall__Inputs(this);
  }

  get outputs(): CreateFundCall__Outputs {
    return new CreateFundCall__Outputs(this);
  }
}

export class CreateFundCall__Inputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get _privatePool(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get _manager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _managerName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _fundName(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _fundSymbol(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _managerFeeNumerator(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _supportedAssets(): Array<CreateFundCall_supportedAssetsStruct> {
    return this._call.inputValues[6].value.toTupleArray<
      CreateFundCall_supportedAssetsStruct
    >();
  }
}

export class CreateFundCall__Outputs {
  _call: CreateFundCall;

  constructor(call: CreateFundCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateFundCall_supportedAssetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get isDeposit(): boolean {
    return this[1].toBoolean();
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _proxyType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _poolLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _managerLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get assetHandler(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get daoAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAssetGuardCall extends ethereum.Call {
  get inputs(): SetAssetGuardCall__Inputs {
    return new SetAssetGuardCall__Inputs(this);
  }

  get outputs(): SetAssetGuardCall__Outputs {
    return new SetAssetGuardCall__Outputs(this);
  }
}

export class SetAssetGuardCall__Inputs {
  _call: SetAssetGuardCall;

  constructor(call: SetAssetGuardCall) {
    this._call = call;
  }

  get assetType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get guardAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAssetGuardCall__Outputs {
  _call: SetAssetGuardCall;

  constructor(call: SetAssetGuardCall) {
    this._call = call;
  }
}

export class SetAssetHandlerCall extends ethereum.Call {
  get inputs(): SetAssetHandlerCall__Inputs {
    return new SetAssetHandlerCall__Inputs(this);
  }

  get outputs(): SetAssetHandlerCall__Outputs {
    return new SetAssetHandlerCall__Outputs(this);
  }
}

export class SetAssetHandlerCall__Inputs {
  _call: SetAssetHandlerCall;

  constructor(call: SetAssetHandlerCall) {
    this._call = call;
  }

  get assetHandler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAssetHandlerCall__Outputs {
  _call: SetAssetHandlerCall;

  constructor(call: SetAssetHandlerCall) {
    this._call = call;
  }
}

export class SetContractGuardCall extends ethereum.Call {
  get inputs(): SetContractGuardCall__Inputs {
    return new SetContractGuardCall__Inputs(this);
  }

  get outputs(): SetContractGuardCall__Outputs {
    return new SetContractGuardCall__Outputs(this);
  }
}

export class SetContractGuardCall__Inputs {
  _call: SetContractGuardCall;

  constructor(call: SetContractGuardCall) {
    this._call = call;
  }

  get extContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get guardAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetContractGuardCall__Outputs {
  _call: SetContractGuardCall;

  constructor(call: SetContractGuardCall) {
    this._call = call;
  }
}

export class SetDaoAddressCall extends ethereum.Call {
  get inputs(): SetDaoAddressCall__Inputs {
    return new SetDaoAddressCall__Inputs(this);
  }

  get outputs(): SetDaoAddressCall__Outputs {
    return new SetDaoAddressCall__Outputs(this);
  }
}

export class SetDaoAddressCall__Inputs {
  _call: SetDaoAddressCall;

  constructor(call: SetDaoAddressCall) {
    this._call = call;
  }

  get daoAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDaoAddressCall__Outputs {
  _call: SetDaoAddressCall;

  constructor(call: SetDaoAddressCall) {
    this._call = call;
  }
}

export class SetDaoFeeCall extends ethereum.Call {
  get inputs(): SetDaoFeeCall__Inputs {
    return new SetDaoFeeCall__Inputs(this);
  }

  get outputs(): SetDaoFeeCall__Outputs {
    return new SetDaoFeeCall__Outputs(this);
  }
}

export class SetDaoFeeCall__Inputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }

  get numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDaoFeeCall__Outputs {
  _call: SetDaoFeeCall;

  constructor(call: SetDaoFeeCall) {
    this._call = call;
  }
}

export class SetExitCooldownCall extends ethereum.Call {
  get inputs(): SetExitCooldownCall__Inputs {
    return new SetExitCooldownCall__Inputs(this);
  }

  get outputs(): SetExitCooldownCall__Outputs {
    return new SetExitCooldownCall__Outputs(this);
  }
}

export class SetExitCooldownCall__Inputs {
  _call: SetExitCooldownCall;

  constructor(call: SetExitCooldownCall) {
    this._call = call;
  }

  get cooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitCooldownCall__Outputs {
  _call: SetExitCooldownCall;

  constructor(call: SetExitCooldownCall) {
    this._call = call;
  }
}

export class SetLogicCall extends ethereum.Call {
  get inputs(): SetLogicCall__Inputs {
    return new SetLogicCall__Inputs(this);
  }

  get outputs(): SetLogicCall__Outputs {
    return new SetLogicCall__Outputs(this);
  }
}

export class SetLogicCall__Inputs {
  _call: SetLogicCall;

  constructor(call: SetLogicCall) {
    this._call = call;
  }

  get _poolLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _poolManagerLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetLogicCall__Outputs {
  _call: SetLogicCall;

  constructor(call: SetLogicCall) {
    this._call = call;
  }
}

export class SetManagerFeeNumeratorChangeDelayCall extends ethereum.Call {
  get inputs(): SetManagerFeeNumeratorChangeDelayCall__Inputs {
    return new SetManagerFeeNumeratorChangeDelayCall__Inputs(this);
  }

  get outputs(): SetManagerFeeNumeratorChangeDelayCall__Outputs {
    return new SetManagerFeeNumeratorChangeDelayCall__Outputs(this);
  }
}

export class SetManagerFeeNumeratorChangeDelayCall__Inputs {
  _call: SetManagerFeeNumeratorChangeDelayCall;

  constructor(call: SetManagerFeeNumeratorChangeDelayCall) {
    this._call = call;
  }

  get delay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetManagerFeeNumeratorChangeDelayCall__Outputs {
  _call: SetManagerFeeNumeratorChangeDelayCall;

  constructor(call: SetManagerFeeNumeratorChangeDelayCall) {
    this._call = call;
  }
}

export class SetMaximumManagerFeeNumeratorChangeCall extends ethereum.Call {
  get inputs(): SetMaximumManagerFeeNumeratorChangeCall__Inputs {
    return new SetMaximumManagerFeeNumeratorChangeCall__Inputs(this);
  }

  get outputs(): SetMaximumManagerFeeNumeratorChangeCall__Outputs {
    return new SetMaximumManagerFeeNumeratorChangeCall__Outputs(this);
  }
}

export class SetMaximumManagerFeeNumeratorChangeCall__Inputs {
  _call: SetMaximumManagerFeeNumeratorChangeCall;

  constructor(call: SetMaximumManagerFeeNumeratorChangeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaximumManagerFeeNumeratorChangeCall__Outputs {
  _call: SetMaximumManagerFeeNumeratorChangeCall;

  constructor(call: SetMaximumManagerFeeNumeratorChangeCall) {
    this._call = call;
  }
}

export class SetMaximumSupportedAssetCountCall extends ethereum.Call {
  get inputs(): SetMaximumSupportedAssetCountCall__Inputs {
    return new SetMaximumSupportedAssetCountCall__Inputs(this);
  }

  get outputs(): SetMaximumSupportedAssetCountCall__Outputs {
    return new SetMaximumSupportedAssetCountCall__Outputs(this);
  }
}

export class SetMaximumSupportedAssetCountCall__Inputs {
  _call: SetMaximumSupportedAssetCountCall;

  constructor(call: SetMaximumSupportedAssetCountCall) {
    this._call = call;
  }

  get count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaximumSupportedAssetCountCall__Outputs {
  _call: SetMaximumSupportedAssetCountCall;

  constructor(call: SetMaximumSupportedAssetCountCall) {
    this._call = call;
  }
}

export class SetPoolManagerFeeNumeratorCall extends ethereum.Call {
  get inputs(): SetPoolManagerFeeNumeratorCall__Inputs {
    return new SetPoolManagerFeeNumeratorCall__Inputs(this);
  }

  get outputs(): SetPoolManagerFeeNumeratorCall__Outputs {
    return new SetPoolManagerFeeNumeratorCall__Outputs(this);
  }
}

export class SetPoolManagerFeeNumeratorCall__Inputs {
  _call: SetPoolManagerFeeNumeratorCall;

  constructor(call: SetPoolManagerFeeNumeratorCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get numerator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPoolManagerFeeNumeratorCall__Outputs {
  _call: SetPoolManagerFeeNumeratorCall;

  constructor(call: SetPoolManagerFeeNumeratorCall) {
    this._call = call;
  }
}

export class SetTrackingCodeCall extends ethereum.Call {
  get inputs(): SetTrackingCodeCall__Inputs {
    return new SetTrackingCodeCall__Inputs(this);
  }

  get outputs(): SetTrackingCodeCall__Outputs {
    return new SetTrackingCodeCall__Outputs(this);
  }
}

export class SetTrackingCodeCall__Inputs {
  _call: SetTrackingCodeCall;

  constructor(call: SetTrackingCodeCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetTrackingCodeCall__Outputs {
  _call: SetTrackingCodeCall;

  constructor(call: SetTrackingCodeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradePoolBatchCall extends ethereum.Call {
  get inputs(): UpgradePoolBatchCall__Inputs {
    return new UpgradePoolBatchCall__Inputs(this);
  }

  get outputs(): UpgradePoolBatchCall__Outputs {
    return new UpgradePoolBatchCall__Outputs(this);
  }
}

export class UpgradePoolBatchCall__Inputs {
  _call: UpgradePoolBatchCall;

  constructor(call: UpgradePoolBatchCall) {
    this._call = call;
  }

  get startIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get endIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sourceVersion(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get targetVersion(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpgradePoolBatchCall__Outputs {
  _call: UpgradePoolBatchCall;

  constructor(call: UpgradePoolBatchCall) {
    this._call = call;
  }
}
